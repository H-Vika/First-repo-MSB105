---
title: "Untitled"
format: html
editor: visual
---

```{r}
library(ggplot2)
library(tinytex)
library(tidyverse)
library(ggpubr)
```

```{r}
ggplot(data = mtcars)
```

```{r}
ggplot(data = mtcars, mapping = aes(x = disp, y = mpg))
```

```{r}
gg1 <-   ggplot(data = mtcars, mapping = aes(x = disp, y = mpg)) +
  geom_point()

gg2 <-   ggplot(data = mtcars) +
  geom_point(mapping = aes(x = disp, y = mpg))

ggarrange(gg1, gg2, labels = c("mapping = aes in ggplot", "mapping = aes in geom_*"),
          nrow = 1)
```


```{r}
ggplot() +
  #geom_point has mapping as first argument. We have to use named arguments
  #or switch their order
  geom_point(data = mtcars, mapping = aes(x = disp, y = mpg))
```

```{r}
## combine aes
gg3 <-   ggplot(data = mtcars, mapping = aes(x = disp, colour = factor(cyl))) +
##  geom_point(data = mtcars, mapping = aes(y = mpg), col = 'blue')
  geom_point(data = mtcars, mapping = aes(y = mpg))
#inherit.aes    = FALSE, overrides the default aesthetics, rather than combining with them.
gg4 <-   ggplot(data =  mtcars, mapping = aes(x = disp, colour = factor(cyl))) +
##  geom_point(data = mtcars, mapping = aes(y = mpg), col = 'blue')
  geom_point(data = mtcars, mapping = aes(x = qsec, y = mpg), show.legend = TRUE, inherit.aes = FALSE)
```

```{r}
## x = disp removed from ggplot
gg5 <-   ggplot(data = mtcars, mapping = aes(colour = factor(cyl))) +
##  geom_point(data = mtcars, mapping = aes(y = mpg), col = 'blue')
  geom_point(mapping = aes(x = qsec, y = mpg), show.legend = TRUE, inherit.aes = FALSE)

ggarrange(gg3, gg4, gg5, labels = c("inherit.aes = TRUE\n(default)", "inherit.aes = FALSE", "no x = disp\nin ggplot"),
          nrow = 1)
```

```{r}
ggplot() +
  geom_point(data = mtcars, mapping = aes(x = disp, y = mpg, colour = factor(cyl), size = qsec))
```

```{r}
ggplot() +
  geom_point(data = mtcars,
             mapping = aes(x = disp, y = mpg, colour = factor(cyl), alpha = 3.6*(0.25*1609.347)/qsec,
                           shape = factor(ifelse(am, "Man", "Aut"))), size=4) +
  labs(colour = "cyl", alpha = "speed\n(km/h)", shape = "trans-\nmission")
```

```{r}
ggplot() +
  geom_point(
    data = mtcars,
    mapping = aes(
      x = disp,
      y = mpg, 
      colour = factor(cyl), 
      size = 3.6*(0.25*1609.347)/qsec, 
      shape = factor(
        # Note codeing am
        # 0 automatic, 1 manual
        ifelse(
          am, 
          "Aut", 
          "Man"
          )
        )
      )
    ) +
  labs(
    colour = "cyl", 
    size = "speed\n(km/h)", 
    shape = "trans-\nmission"
    ) +
  geom_smooth(method = "lm", se = FALSE, colour = ¨black¨, linewidth = 2) +
  geom_smooth(method = MASS::rlm, se = FALSE, colour = ¨red¨, linewidth = 2)
```

## Citing R and packeges

```{r}
citation()
```


```{r}
ggplot(
  data = mtcars, 
  mapping = aes(
    x = disp, 
    y = mpg
    )
  ) +
  geom_point() +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  # robust lm
  geom_smooth(
    method = MASS::rlm, 
    colour = 'Red', 
    se = FALSE
    )
```


```{r}
df_mean <- mtcars |> 
  group_by(cyl) |> 
  summarise(
    mpg = mean(mpg),
    disp = mean(disp)
  ) |> 
  mutate(
    cyl = c("avg. car 4 cyl.", 
            "avg. car 6 cyl.", "avg. car 8 cyl.")
  )
```

```{r}
df_mean
```

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(x = disp, y = mpg)
  ) +
  geom_point(
    mapping = aes(colour = factor(cyl))
    ) +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  geom_smooth(
    method = MASS::rlm, 
    colour = 'Red', 
    se = FALSE
    ) +
  geom_point(
    data = df_mean, 
    mapping = aes(x = disp, y = mpg), 
    colour = "black", 
    size = 3
    ) +
  geom_text(
    data = df_mean, 
    mapping = aes(x = disp, y = mpg, label = cyl), 
    colour = "black", 
    vjust = 1.5
    )
```



